{"version":3,"sources":["redux/phoneBook/phoneBook-actions.js","redux/auth/auth-operations.js","redux/auth/auth-actions.js","redux/phoneBook/phoneBook-reducer.js","redux/auth/auth-reducer.js","redux/store.js","redux/auth/auth-selectors.js","components/AppBar/Navigation.js","components/AppBar/UserMenu.js","components/AppBar/AuthNav.js","components/AppBar/AppBar.js","components/PrivateRout.js","components/PublicRout.js","App.js","index.js"],"names":["fetchContactRequest","createAction","fetchContactSuccess","fetchContactError","addContactRequest","addContactSuccess","addContactError","deleteContactRequest","deleteContactSuccess","deleteContactError","filterContacts","axios","defaults","baseURL","token","headers","common","Authorization","register","credentials","dispatch","registerRequest","post","then","data","registerSuccess","catch","error","registerError","message","logIn","loginRequest","loginSuccess","loginError","logOut","logoutRequest","logoutSuccess","logoutError","getCurrentUser","getState","persistedToken","auth","getCurrentUserRequest","get","getCurrentUserSuccess","getCurrentUserError","items","createReducer","state","payload","filter","contact","id","_","setError","combineReducers","initialUserState","name","email","user","isAuthenticated","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","authPersistConfig","key","storage","whitelist","store","configureStore","reducer","persistReducer","authReducer","contacts","phoneBookReducer","persistor","persistStore","getIsAuthenticated","getUserName","styles","link","display","textDecoration","padding","fontWeight","color","activeLink","connect","to","exact","style","activeStyle","container","alignItems","avatar","marginRight","mapDisspatchToProps","onLogout","src","alt","width","type","onClick","AuthNav","header","justifyContent","borderBottom","Component","component","redirectTo","routeProps","render","props","restricted","HomeView","lazy","RegisterView","LoginView","ContactsView","App","this","onGetCurrentUser","fallback","path","PublicRout","PrivateRout","mapDispatchToProps","ReactDOM","StrictMode","loading","document","getElementById"],"mappings":"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","file":"static/js/main.2306f4c1.chunk.js","sourcesContent":["import { createAction } from '@reduxjs/toolkit';\n\nexport const fetchContactRequest = createAction(\n  'phoneBook/fetchContactRequest',\n);\nexport const fetchContactSuccess = createAction(\n  'phoneBook/fetchContactSuccess',\n);\nexport const fetchContactError = createAction('phoneBook/fetchContactError');\n\nexport const addContactRequest = createAction('phoneBook/addContactRequest');\nexport const addContactSuccess = createAction('phoneBook/addContactSuccess');\nexport const addContactError = createAction('phoneBook/addContactError');\n\nexport const deleteContactRequest = createAction(\n  'phoneBook/deleteContactRequest',\n);\nexport const deleteContactSuccess = createAction(\n  'phoneBook/deleteContactSuccess',\n);\nexport const deleteContactError = createAction('phoneBook/deleteContactError');\n\nexport const filterContacts = createAction('phoneBook/filterContacts');\n","import axios from 'axios';\nimport {\n  registerRequest,\n  registerSuccess,\n  registerError,\n  loginRequest,\n  loginSuccess,\n  loginError,\n  logoutRequest,\n  logoutSuccess,\n  logoutError,\n  getCurrentUserRequest,\n  getCurrentUserSuccess,\n  getCurrentUserError,\n} from './auth-actions';\n\naxios.defaults.baseURL = 'https://goit-phonebook-api.herokuapp.com';\n\nconst token = {\n  set(token) {\n    axios.defaults.headers.common.Authorization = `Bearer ${token}`;\n  },\n  unset() {\n    axios.defaults.headers.common.Authorization = '';\n  },\n};\n\nexport const register = credentials => dispatch => {\n  dispatch(registerRequest());\n\n  axios\n    .post('/users/signup', credentials)\n    .then(({ data }) => dispatch(registerSuccess(data), token.set(data.token)))\n    .catch(error => dispatch(registerError(error.message)));\n};\n\nexport const logIn = credentials => dispatch => {\n  dispatch(loginRequest());\n\n  axios\n    .post('/users/login', credentials)\n    .then(({ data }) => dispatch(loginSuccess(data), token.set(data.token)))\n    .catch(error => dispatch(loginError(error.message)));\n};\n\nexport const logOut = () => dispatch => {\n  dispatch(logoutRequest);\n\n  axios\n    .post('/users/logout')\n    .then(() => dispatch(logoutSuccess()), token.unset())\n    .catch(error => dispatch(logoutError(error.message)));\n};\n\nexport const getCurrentUser = () => (dispatch, getState) => {\n  const {\n    auth: { token: persistedToken },\n  } = getState();\n\n  if (!persistedToken) return;\n\n  token.set(persistedToken);\n  dispatch(getCurrentUserRequest());\n\n  axios\n    .get('/users/current')\n    .then(({ data }) => dispatch(getCurrentUserSuccess(data)))\n    .catch(error => dispatch(getCurrentUserError(error.message)));\n};\n","import { createAction } from '@reduxjs/toolkit';\n\nexport const registerRequest = createAction('auth/registerRequest');\nexport const registerSuccess = createAction('auth/registerSuccess');\nexport const registerError = createAction('auth/registerError');\n\nexport const loginRequest = createAction('auth/loginRequest');\nexport const loginSuccess = createAction('auth/loginSuccess');\nexport const loginError = createAction('auth/loginError');\n\nexport const logoutRequest = createAction('auth/logoutRequest');\nexport const logoutSuccess = createAction('auth/logoutSuccess');\nexport const logoutError = createAction('auth/logoutError');\n\nexport const getCurrentUserRequest = createAction('auth/getCurrentUserRequest');\nexport const getCurrentUserSuccess = createAction('auth/getCurrentUserSuccess');\nexport const getCurrentUserError = createAction('auth/getCurrentUserError');\n","import { combineReducers, createReducer } from '@reduxjs/toolkit';\nimport {\n  fetchContactSuccess,\n  fetchContactError,\n  addContactSuccess,\n  addContactError,\n  deleteContactSuccess,\n  deleteContactError,\n  filterContacts,\n} from './phoneBook-actions';\n\nconst items = createReducer([], {\n  [fetchContactSuccess]: (state, { payload }) => payload,\n  [addContactSuccess]: (state, { payload }) => [...state, payload],\n  [deleteContactSuccess]: (state, { payload }) =>\n    state.filter(contact => contact.id !== payload),\n});\n\n// const loadingReducer = createReducer(false, {\n//   [fetchContactRequest]: () => true,\n//   [fetchContactSuccess]: () => false,\n//   [fetchContactError]: () => false,\n//   [addContactRequest]: () => true,\n//   [addContactSuccess]: () => false,\n//   [addContactError]: () => false,\n//   [deleteContactRequest]: () => true,\n//   [deleteContactSuccess]: () => false,\n//   [deleteContactError]: () => false,\n// });\n\nconst filter = createReducer('', {\n  [filterContacts]: (_, { payload }) => payload,\n});\n\nconst setError = (_, { payload }) => payload;\nconst error = createReducer(null, {\n  [fetchContactError]: setError,\n  [addContactError]: setError,\n  [deleteContactError]: setError,\n});\n\nexport default combineReducers({\n  items: items,\n  filter: filter,\n  error: error,\n});\n","import { combineReducers } from 'redux';\nimport { createReducer } from '@reduxjs/toolkit';\nimport {\n  registerSuccess,\n  registerError,\n  loginSuccess,\n  loginError,\n  logoutSuccess,\n  logoutError,\n  getCurrentUserSuccess,\n  getCurrentUserError,\n} from './auth-actions';\n\nconst initialUserState = { name: null, email: null };\n\nconst user = createReducer(initialUserState, {\n  [registerSuccess]: (_, { payload }) => payload.user,\n  [loginSuccess]: (_, { payload }) => payload.user,\n  [logoutSuccess]: () => initialUserState,\n  [getCurrentUserSuccess]: (_, { payload }) => payload,\n});\n\nconst token = createReducer(null, {\n  [registerSuccess]: (_, { payload }) => payload.token,\n  [loginSuccess]: (_, { payload }) => payload.token,\n  [logoutSuccess]: () => null,\n});\n\nconst setError = (_, { payload }) => payload;\nconst error = createReducer(null, {\n  [registerError]: setError,\n  [loginError]: setError,\n  [logoutError]: setError,\n  [getCurrentUserError]: setError,\n});\n\nconst isAuthenticated = createReducer(false, {\n  [registerSuccess]: () => true,\n  [loginSuccess]: () => true,\n  [getCurrentUserSuccess]: () => true,\n  [registerError]: () => false,\n  [loginError]: () => false,\n  [getCurrentUserError]: () => false,\n  [logoutSuccess]: () => false,\n});\n\nexport default combineReducers({\n  user,\n  token,\n  error,\n  isAuthenticated,\n});\n","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\nimport phoneBookReducer from './phoneBook/phoneBook-reducer';\nimport authReducer from './auth/auth-reducer';\nimport storage from 'redux-persist/lib/storage';\nimport {\n  persistStore,\n  persistReducer,\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n} from 'redux-persist';\n\nconst middleware = [\n  ...getDefaultMiddleware({\n    serializableCheck: {\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n    },\n  }),\n];\n\nconst authPersistConfig = {\n  key: 'auth',\n  storage,\n  whitelist: ['token'],\n};\n\nconst store = configureStore({\n  reducer: {\n    auth: persistReducer(authPersistConfig, authReducer),\n    contacts: phoneBookReducer,\n  },\n  middleware,\n});\n\nconst persistor = persistStore(store);\n\nexport default { persistor, store };\n","export const getIsAuthenticated = state => state.auth.isAuthenticated;\nexport const getUserName = state => state.auth.user.name;\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { getIsAuthenticated } from '../../redux/auth/auth-selectors';\n\nconst styles = {\n  link: {\n    display: 'inline-block',\n    textDecoration: 'none',\n    padding: 12,\n    fontWeight: 700,\n    color: '#2A363B',\n  },\n  activeLink: {\n    color: '#E84A5F',\n  },\n};\n\nconst Navigation = ({ isAuthenticated }) => (\n  <nav>\n    <NavLink to=\"/\" exact style={styles.link} activeStyle={styles.activeLink}>\n      Home\n    </NavLink>\n\n    {isAuthenticated && (\n      <NavLink\n        to=\"/contacts\"\n        exact\n        style={styles.link}\n        activeStyle={styles.activeLink}\n      >\n        My contacts\n      </NavLink>\n    )}\n  </nav>\n);\n\nconst mapStateToProps = state => ({\n  isAuthenticated: getIsAuthenticated(state),\n});\n\nexport default connect(mapStateToProps)(Navigation);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { getUserName } from '../../redux/auth/auth-selectors';\nimport { logOut } from '../../redux/auth/auth-operations';\n\nconst styles = {\n  container: {\n    display: 'flex',\n    alignItems: 'center',\n  },\n  avatar: {\n    marginRight: 4,\n  },\n  name: {\n    fontWeight: 700,\n    marginRight: 12,\n  },\n};\n\nconst UserMenu = ({ avatar, name, onLogout }) => (\n  <div style={styles.container}>\n    <img src={avatar} alt=\"\" width=\"32\" style={styles.avatar} />\n    <span style={styles.name}>Welcome, {name}</span>\n    <button type=\"button\" onClick={onLogout}>\n      Logout\n    </button>\n  </div>\n);\n\nconst mapStateToProps = state => ({\n  name: getUserName(state),\n});\n\nconst mapDisspatchToProps = {\n  onLogout: logOut,\n};\n\nexport default connect(mapStateToProps, mapDisspatchToProps)(UserMenu);\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\n\nconst styles = {\n  link: {\n    display: 'inline-block',\n    textDecoration: 'none',\n    padding: 12,\n    fontWeight: 700,\n    color: '#2A363B',\n  },\n  activeLink: {\n    color: '#E84A5F',\n  },\n};\n\nconst AuthNav = () => (\n  <div>\n    <NavLink\n      to=\"/register\"\n      exact\n      style={styles.link}\n      activeStyle={styles.activeLink}\n    >\n      Sign Up\n    </NavLink>\n    <NavLink\n      to=\"/login\"\n      exact\n      style={styles.link}\n      activeStyle={styles.activeLink}\n    >\n      Log In\n    </NavLink>\n  </div>\n);\n\nexport default AuthNav;\n","import React from 'react';\nimport Navigation from './Navigation';\nimport UserMenu from './UserMenu';\nimport AuthNav from './AuthNav';\nimport { connect } from 'react-redux';\nimport { getIsAuthenticated } from '../../redux/auth/auth-selectors';\n\nconst styles = {\n  header: {\n    display: 'flex',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    borderBottom: '1px solid #2A363B',\n  },\n};\n\nconst AppBar = ({ isAuthenticated }) => (\n  <header style={styles.header}>\n    <Navigation />\n    {isAuthenticated ? <UserMenu /> : <AuthNav />}\n  </header>\n);\n\nconst mapStateToProps = state => ({\n  isAuthenticated: getIsAuthenticated(state),\n});\n\nexport default connect(mapStateToProps, null)(AppBar);\n","import React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { getIsAuthenticated } from '../redux/auth/auth-selectors';\n\nconst PrivateRoute = ({\n  component: Component,\n  isAuthenticated,\n  redirectTo,\n  ...routeProps\n}) => (\n  <Route\n    {...routeProps}\n    render={props =>\n      isAuthenticated ? <Component {...props} /> : <Redirect to={redirectTo} />\n    }\n  />\n);\n\nconst mapStateToProps = state => ({\n  isAuthenticated: getIsAuthenticated(state),\n});\n\nexport default connect(mapStateToProps)(PrivateRoute);\n","import React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport { getIsAuthenticated } from '../redux/auth/auth-selectors';\n\nconst PublicRoute = ({\n  component: Component,\n  isAuthenticated,\n  redirectTo,\n  ...routeProps\n}) => (\n  <Route\n    {...routeProps}\n    render={props =>\n      isAuthenticated && routeProps.restricted ? (\n        <Redirect to={redirectTo} />\n      ) : (\n        <Component {...props} />\n      )\n    }\n  />\n);\n\nconst mapStateToProps = state => ({\n  isAuthenticated: getIsAuthenticated(state),\n});\n\nexport default connect(mapStateToProps)(PublicRoute);\n","import React, { Component, Suspense, lazy } from 'react';\nimport { Switch, Route } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport AppBar from './components/AppBar/AppBar';\nimport PrivateRout from './components/PrivateRout';\nimport PublicRout from './components/PublicRout';\nimport { getCurrentUser } from './redux/auth/auth-operations';\n\nconst HomeView = lazy(() => import('./views/HomeView'));\nconst RegisterView = lazy(() => import('./views/RegisterView'));\nconst LoginView = lazy(() => import('./views/LoginView'));\nconst ContactsView = lazy(() => import('./views/ContactsView'));\n\nclass App extends Component {\n  componentDidMount() {\n    this.props.onGetCurrentUser();\n  }\n\n  render() {\n    return (\n      <>\n        <AppBar />\n        <Suspense fallback={<p>Loading...</p>}>\n          <Switch>\n            <Route exact path=\"/\" component={HomeView} />\n            <PublicRout\n              path=\"/register\"\n              component={RegisterView}\n              restricted\n              redirectTo=\"/contacts\"\n            />\n            <PublicRout\n              path=\"/login\"\n              component={LoginView}\n              restricted\n              redirectTo=\"/contacts\"\n            />\n            <PrivateRout\n              path=\"/contacts\"\n              component={ContactsView}\n              redirectTo=\"/login\"\n            />\n          </Switch>\n        </Suspense>\n      </>\n    );\n  }\n}\n\nconst mapDispatchToProps = {\n  onGetCurrentUser: getCurrentUser,\n};\n\nexport default connect(null, mapDispatchToProps)(App);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { BrowserRouter } from 'react-router-dom';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport store from './redux/store';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store.store}>\n      <PersistGate loading={null} persistor={store.persistor}>\n        <BrowserRouter>\n          <App />\n        </BrowserRouter>\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}