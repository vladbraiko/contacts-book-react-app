{"version":3,"sources":["components/ContactList/ContactList.module.css","components/ContactForm/ContactForm.module.css","components/Filter/Filter.module.css","components/ContactList/ContactItem.js","redux/phoneBook/phoneBook-selectors.js","components/ContactList/ContactList.js","redux/phoneBook/phoneBook-operations.js","components/ContactForm/ContactForm.js","components/Filter/Filter.js","views/ContactsView.js"],"names":["module","exports","ContactItem","name","number","id","onDelete","className","styles","remove_contact_btn","type","onClick","getFilter","state","contacts","filter","getFilteredContacts","createSelector","items","filteredName","toLowerCase","item","includes","ContactList","this","props","fetchContacts","filteredContacts","map","key","contact","Component","mapDispatchtoProps","contactId","dispatch","deleteContactRequest","axios","delete","then","deleteContactSuccess","catch","error","deleteContactError","message","fetchContactRequest","get","data","fetchContactSuccess","fetchContactError","connect","ContactForm","handleChange","e","setState","currentTarget","value","onSubmit","preventDefault","wrapper","form","title_form","onChange","input","add_contact_btn","React","mapDispatchToProps","addContactRequest","post","addContactSuccess","addContactError","filterContacts","target","blockFilter","filter_title","ContactsView"],"mappings":"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","file":"static/js/3.89044cd6.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"remove_contact_btn\":\"ContactList_remove_contact_btn__23BRh\",\"contact\":\"ContactList_contact__3ZIyH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"ContactForm_wrapper__3aITH\",\"title_form\":\"ContactForm_title_form__1waeZ\",\"input\":\"ContactForm_input__gm87B\",\"add_contact_btn\":\"ContactForm_add_contact_btn__3uqxT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filter_title\":\"Filter_filter_title__1PVhT\",\"input\":\"Filter_input__2DoVp\"};","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './ContactList.module.css';\n\nfunction ContactItem({ name, number, id, onDelete }) {\n  return (\n    <>\n      {name}: {number}\n      <button\n        className={styles.remove_contact_btn}\n        type=\"button\"\n        onClick={() => onDelete(id)}\n      >\n        Delete\n      </button>\n    </>\n  );\n}\n\nContactItem.propTypes = {\n  name: PropTypes.string,\n  number: PropTypes.string,\n  id: PropTypes.string,\n  onDelete: PropTypes.func,\n};\n\nexport default ContactItem;\n","import { createSelector } from '@reduxjs/toolkit';\n\nexport const getContacts = state => state.contacts.items;\nexport const getFilter = state => state.contacts.filter;\n\nexport const getFilteredContacts = createSelector(\n  [getFilter, getContacts],\n  (filter, items) => {\n    const filteredName = filter.toLowerCase();\n\n    const visibleContacts = items.filter(item =>\n      item.name.toLowerCase().includes(filteredName),\n    );\n\n    return visibleContacts;\n  },\n);\n","import React, { Component } from 'react';\nimport PropTypes, { shape } from 'prop-types';\nimport ContactItem from './ContactItem';\nimport styles from './ContactList.module.css';\nimport { connect } from 'react-redux';\nimport {\n  deleteContact,\n  fetchContacts,\n} from '../../redux/phoneBook/phoneBook-operations';\nimport { getFilteredContacts } from '../../redux/phoneBook/phoneBook-selectors';\n\nclass ContactList extends Component {\n  componentDidMount() {\n    this.props.fetchContacts();\n  }\n\n  render() {\n    const { filteredContacts, onDelete } = this.props;\n    return (\n      <ul>\n        {filteredContacts.map(item => (\n          <li key={item.id} className={styles.contact}>\n            <ContactItem\n              name={item.name}\n              number={item.number}\n              onDelete={onDelete}\n              id={item.id}\n            />\n          </li>\n        ))}\n      </ul>\n    );\n  }\n}\n\nContactList.propTypes = {\n  filteredContacts: PropTypes.arrayOf(\n    shape({\n      id: PropTypes.sting,\n      name: PropTypes.string,\n      number: PropTypes.string,\n    }),\n  ),\n};\n\nconst mapStateToProps = state => ({\n  filteredContacts: getFilteredContacts(state),\n});\n\nconst mapDispatchtoProps = {\n  onDelete: deleteContact,\n  fetchContacts: fetchContacts,\n};\n\nexport default connect(mapStateToProps, mapDispatchtoProps)(ContactList);\n","import {\n  fetchContactRequest,\n  fetchContactSuccess,\n  fetchContactError,\n  addContactRequest,\n  addContactSuccess,\n  addContactError,\n  deleteContactRequest,\n  deleteContactSuccess,\n  deleteContactError,\n} from './phoneBook-actions';\nimport axios from 'axios';\n\nexport const fetchContacts = () => dispatch => {\n  dispatch(fetchContactRequest());\n\n  axios\n    .get('/contacts')\n    .then(({ data }) => dispatch(fetchContactSuccess(data)))\n    .catch(error => dispatch(fetchContactError(error.message)));\n};\n\nexport const addContact = ({ name, number }) => dispatch => {\n  const contact = { name, number };\n\n  dispatch(addContactRequest());\n\n  axios\n    .post('/contacts', contact)\n    .then(({ data }) => dispatch(addContactSuccess(data)))\n    .catch(error => dispatch(addContactError(error.message)));\n};\n\nexport const deleteContact = contactId => dispatch => {\n  dispatch(deleteContactRequest());\n\n  axios\n    .delete(`/contacts/${contactId}`)\n    .then(() => dispatch(deleteContactSuccess(contactId)))\n    .catch(error => dispatch(deleteContactError(error.message)));\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport styles from './ContactForm.module.css';\nimport { addContact } from '../../redux/phoneBook/phoneBook-operations';\n\nclass ContactForm extends React.Component {\n  state = {\n    name: '',\n    number: '',\n  };\n\n  handleChange = e => {\n    this.setState({\n      [e.currentTarget.name]: e.currentTarget.value,\n    });\n  };\n\n  onSubmit = e => {\n    e.preventDefault();\n    this.props.onSubmit(this.state);\n\n    this.setState({\n      name: '',\n      number: '',\n    });\n  };\n\n  render() {\n    return (\n      <div className={styles.wrapper}>\n        <form className={styles.form} onSubmit={this.onSubmit}>\n          <label>\n            <h2 className={styles.title_form}>Name</h2>\n            <input\n              type=\"name\"\n              name=\"name\"\n              value={this.state.name}\n              onChange={this.handleChange}\n              className={styles.input}\n            />\n          </label>\n          <label>\n            <h2 className={styles.title_form}>Number</h2>\n            <input\n              type=\"tel\"\n              name=\"number\"\n              value={this.state.number}\n              onChange={this.handleChange}\n              className={styles.input}\n            />\n          </label>\n          <button className={styles.add_contact_btn} type=\"submit\">\n            Add contact\n          </button>\n        </form>\n      </div>\n    );\n  }\n}\n\nContactForm.propTypes = {\n  onSubmit: PropTypes.func,\n};\n\nconst mapDispatchToProps = {\n  onSubmit: addContact,\n};\n\nexport default connect(null, mapDispatchToProps)(ContactForm);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './Filter.module.css';\nimport { connect } from 'react-redux';\nimport { filterContacts } from '../../redux/phoneBook/phoneBook-actions';\nimport { getFilter } from '../../redux/phoneBook/phoneBook-selectors';\n\nfunction Filter({ value, onChange }) {\n  return (\n    <div className={styles.blockFilter}>\n      <label className={styles.filter_title}>\n        Find contacts by name\n        <input\n          className={styles.input}\n          type=\"text\"\n          value={value}\n          onChange={onChange}\n        />\n      </label>\n    </div>\n  );\n}\n\nFilter.propTypes = {\n  value: PropTypes.string,\n  onChange: PropTypes.func,\n};\n\nconst mapStatetoProps = state => ({\n  value: getFilter(state),\n});\n\nconst mapDispatchToProps = dispatch => ({\n  onChange: e => dispatch(filterContacts(e.target.value)),\n});\n\nexport default connect(mapStatetoProps, mapDispatchToProps)(Filter);\n","import React from 'react';\nimport ContactList from '../components/ContactList';\nimport ContactForm from '../components/ContactForm';\nimport Filter from '../components/Filter';\n\nconst ContactsView = () => (\n  <>\n    <div>\n      <ContactForm />\n    </div>\n    <Filter />\n    <div>\n      <ContactList />\n    </div>\n  </>\n);\n\nexport default ContactsView;\n"],"sourceRoot":""}