{"version":3,"sources":["components/ContactForm/ContactForm.module.css","components/Filter/Filter.module.css","views/ContactsView.module.css","components/ContactList/ContactItem.js","redux/phoneBook/phoneBook-selectors.js","components/ContactList/ContactList.js","redux/phoneBook/phoneBook-operations.js","components/ContactForm/ContactForm.js","components/Filter/Filter.js","views/ContactsView.js","components/ContactList/ContactList.module.css"],"names":["module","exports","ContactItem","name","number","id","onDelete","className","styles","contact","button","type","onClick","getFilter","state","contacts","filter","getFilteredContacts","createSelector","items","filteredName","toLowerCase","item","includes","ContactList","this","props","fetchContacts","filteredContacts","map","key","Component","mapDispatchtoProps","contactId","dispatch","deleteContactRequest","axios","delete","then","deleteContactSuccess","catch","error","deleteContactError","message","fetchContactRequest","get","data","fetchContactSuccess","fetchContactError","connect","ContactForm","handleChange","e","setState","currentTarget","value","onSubmit","preventDefault","wrapper","input","label","onChange","fullWidth","React","mapDispatchToProps","addContactRequest","post","addContactSuccess","addContactError","filterContacts","target","ContactsView","container","aside","contactsList"],"mappings":"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","file":"static/js/4.17f37d30.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"ContactForm_wrapper__3aITH\",\"button\":\"ContactForm_button__1MLZK\",\"input\":\"ContactForm_input__gm87B\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"Filter_input__2DoVp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"ContactsView_container__EJlU-\",\"aside\":\"ContactsView_aside__2yppF\",\"contactsList\":\"ContactsView_contactsList__3ccsq\"};","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './ContactList.module.css';\n\nfunction ContactItem({ name, number, id, onDelete }) {\n  return (\n    <span className={styles.contact}>\n      {name}: {number}\n      <button\n        className={styles.button}\n        type=\"button\"\n        onClick={() => onDelete(id)}\n      >\n        Delete\n      </button>\n    </span>\n  );\n}\n\nContactItem.propTypes = {\n  name: PropTypes.string,\n  number: PropTypes.string,\n  id: PropTypes.string,\n  onDelete: PropTypes.func,\n};\n\nexport default ContactItem;\n","import { createSelector } from '@reduxjs/toolkit';\n\nexport const getContacts = state => state.contacts.items;\nexport const getFilter = state => state.contacts.filter;\n\nexport const getFilteredContacts = createSelector(\n  [getFilter, getContacts],\n  (filter, items) => {\n    const filteredName = filter.toLowerCase();\n\n    const visibleContacts = items.filter(item =>\n      item.name.toLowerCase().includes(filteredName),\n    );\n\n    return visibleContacts;\n  },\n);\n","import React, { Component } from 'react';\nimport PropTypes, { shape } from 'prop-types';\nimport ContactItem from './ContactItem';\nimport { connect } from 'react-redux';\nimport {\n  deleteContact,\n  fetchContacts,\n} from '../../redux/phoneBook/phoneBook-operations';\nimport { getFilteredContacts } from '../../redux/phoneBook/phoneBook-selectors';\nimport styles from './ContactList.module.css';\n\nclass ContactList extends Component {\n  componentDidMount() {\n    this.props.fetchContacts();\n  }\n\n  render() {\n    const { filteredContacts, onDelete } = this.props;\n    return (\n      <ul className={styles.contacts}>\n        {filteredContacts.map(item => (\n          <li key={item.id}>\n            <ContactItem\n              name={item.name}\n              number={item.number}\n              onDelete={onDelete}\n              id={item.id}\n            />\n          </li>\n        ))}\n      </ul>\n    );\n  }\n}\n\nContactList.propTypes = {\n  filteredContacts: PropTypes.arrayOf(\n    shape({\n      id: PropTypes.sting,\n      name: PropTypes.string,\n      number: PropTypes.string,\n    }),\n  ),\n};\n\nconst mapStateToProps = state => ({\n  filteredContacts: getFilteredContacts(state),\n});\n\nconst mapDispatchtoProps = {\n  onDelete: deleteContact,\n  fetchContacts: fetchContacts,\n};\n\nexport default connect(mapStateToProps, mapDispatchtoProps)(ContactList);\n","import {\n  fetchContactRequest,\n  fetchContactSuccess,\n  fetchContactError,\n  addContactRequest,\n  addContactSuccess,\n  addContactError,\n  deleteContactRequest,\n  deleteContactSuccess,\n  deleteContactError,\n} from './phoneBook-actions';\nimport axios from 'axios';\n\nexport const fetchContacts = () => dispatch => {\n  dispatch(fetchContactRequest());\n\n  axios\n    .get('/contacts')\n    .then(({ data }) => dispatch(fetchContactSuccess(data)))\n    .catch(error => dispatch(fetchContactError(error.message)));\n};\n\nexport const addContact = ({ name, number }) => dispatch => {\n  const contact = { name, number };\n\n  dispatch(addContactRequest());\n\n  axios\n    .post('/contacts', contact)\n    .then(({ data }) => dispatch(addContactSuccess(data)))\n    .catch(error => dispatch(addContactError(error.message)));\n};\n\nexport const deleteContact = contactId => dispatch => {\n  dispatch(deleteContactRequest());\n\n  axios\n    .delete(`/contacts/${contactId}`)\n    .then(() => dispatch(deleteContactSuccess(contactId)))\n    .catch(error => dispatch(deleteContactError(error.message)));\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport Input from '@material-ui/core/TextField';\nimport styles from './ContactForm.module.css';\nimport { addContact } from '../../redux/phoneBook/phoneBook-operations';\n\nclass ContactForm extends React.Component {\n  state = {\n    name: '',\n    number: '',\n  };\n\n  handleChange = e => {\n    this.setState({\n      [e.currentTarget.name]: e.currentTarget.value,\n    });\n  };\n\n  onSubmit = e => {\n    e.preventDefault();\n    this.props.onSubmit(this.state);\n\n    this.setState({\n      name: '',\n      number: '',\n    });\n  };\n\n  render() {\n    return (\n      <div className={styles.wrapper}>\n        <form onSubmit={this.onSubmit}>\n          <div className={styles.input}>\n            <Input\n              type=\"name\"\n              name=\"name\"\n              id=\"standard-basic\"\n              label=\"Name\"\n              value={this.state.name}\n              onChange={this.handleChange}\n              fullWidth={true}\n            />\n          </div>\n\n          <div className={styles.input}>\n            <Input\n              type=\"tel\"\n              name=\"number\"\n              id=\"standard-basic\"\n              label=\"Number\"\n              value={this.state.number}\n              onChange={this.handleChange}\n              fullWidth={true}\n            />\n          </div>\n\n          <button className={styles.button} type=\"submit\">\n            Add contact\n          </button>\n        </form>\n      </div>\n    );\n  }\n}\n\nContactForm.propTypes = {\n  onSubmit: PropTypes.func,\n};\n\nconst mapDispatchToProps = {\n  onSubmit: addContact,\n};\n\nexport default connect(null, mapDispatchToProps)(ContactForm);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './Filter.module.css';\nimport Input from '@material-ui/core/TextField';\nimport { connect } from 'react-redux';\nimport { filterContacts } from '../../redux/phoneBook/phoneBook-actions';\nimport { getFilter } from '../../redux/phoneBook/phoneBook-selectors';\n\nfunction Filter({ value, onChange }) {\n  return (\n    <div className={styles.input}>\n      <Input\n        type=\"text\"\n        label=\"Filter contacts by name\"\n        fullWidth={true}\n        value={value}\n        onChange={onChange}\n      />\n    </div>\n  );\n}\n\nFilter.propTypes = {\n  value: PropTypes.string,\n  onChange: PropTypes.func,\n};\n\nconst mapStatetoProps = state => ({\n  value: getFilter(state),\n});\n\nconst mapDispatchToProps = dispatch => ({\n  onChange: e => dispatch(filterContacts(e.target.value)),\n});\n\nexport default connect(mapStatetoProps, mapDispatchToProps)(Filter);\n","import React from 'react';\nimport ContactList from '../components/ContactList';\nimport ContactForm from '../components/ContactForm';\nimport Filter from '../components/Filter';\nimport styles from './ContactsView.module.css';\n\nconst ContactsView = () => (\n  <div className={styles.container}>\n    <div>\n      <ContactForm />\n    </div>\n    <div className={styles.aside}>\n      <Filter />\n      <div className={styles.contactsList}>\n        <ContactList />\n      </div>\n    </div>\n  </div>\n);\n\nexport default ContactsView;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contacts\":\"ContactList_contacts__1Ny0J\",\"contact\":\"ContactList_contact__3ZIyH\",\"button\":\"ContactList_button__1RuFy\"};"],"sourceRoot":""}